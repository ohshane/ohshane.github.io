---
title: ".kube/config"
subtitle: "KubeContext 앱과 함께"
description: ""
author: Shane Oh
date: 2023-08-23
categories:
  - K8s
---

맥북에는 Minikube를 간편하게 설치해 개발 환경을 구축하고, 집에는 Raspberry Pi 클러스터를 세팅해 홈랩 환경을 구축해 두었다. 이러한 환경을 통해 언제 어디서나 클러스터에 접근하고 관리할 수 있도록 설정을 구성해 놓았다. 특히, 집에 있는 클러스터를 원격에서 접근할 수 있도록 .kube/config 파일을 적절하게 설정해 두었다.

아래는 설정된 .kube/config 파일의 예시이다.

```{.yaml filename=".kube/config"}

apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0...LS0tCg==
    server: https://kubernetes.docker.internal:6443
  name: docker-desktop
- cluster:
    insecure-skip-tls-verify: true
    server: https://121.135.111.111:6443
  name: raspberrypi
- cluster:
    certificate-authority: /Users/shane/.minikube/ca.crt
    extensions:
    - extension:
        last-update: Sun, 20 Aug 2023 17:04:00 KST
        version: v1.30.1
        provider: minikube.sigs.k8s.io
      name: cluster_info
    server: https://127.0.0.1:60544
  name: minikube
```
위의 설정 파일에는 세 개의 클러스터가 정의되어 있다:

- docker-desktop
- raspberrypi
집에 있는 Raspberry Pi 클러스터로, server 주소는 `https://121.135.111.111:6443`이다.
- minikube

이 설정 파일을 통해 kubectl 명령어로 다양한 클러스터에 손쉽게 접근할 수 있다. 예를 들어, Raspberry Pi 클러스터에 접근하려면 다음 명령어를 사용할 수 있다.

```{.sh}
kubectl config use-context raspberrypi
```

이 때 SSL 인증서가 공인 인증인지 검증하는 과정을 bypass하는 커맨드는 다음과 같다.

```{.yaml}
- cluster:
    insecure-skip-tls-verify: true
```
